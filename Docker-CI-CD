node{
stage('SCM checkout'){
  git 'https://github.com/javatech/my-app' 
}
stage('Maven Package'){
  sh 'maven clean package'
  sh 'mv target/my-app*.war target/my-app.war'
}
stage('Build Docker image'){
  sh 'docker build -t aruna/my-app:0.0.1 .' 
}
stage('Push to Docker Hub'){
  with Credentials([string(CredentialsID: 'github-pwd', variable: 'dockerHubPwd')]) {
  sh "docker login -u aruna -p ${dockerhubpwd}"
  }
  sh 'docker push aruna/my-app:0.0.1 .' 
}
stage('Remove Previous container'){
  try{
  
    def dockerrm = 'docker rm -f my-app'
    sshAgent([docker-dev]){
      sh "ssh -o StricktHostKeyChecking=no, ec2-user@172.31.17.196 ${dockerRm}"
    }
  }catch(error){
    // do nothing 
  }
}
stage('Deploy to Dev environment'){
def dockerRun = 'docker run -d -p 8080:8080 --name my-app aruna/my-app:0.0.1 '
   sshagent(['docker-dev']) {
    sh "ssh -o StrictHostKeyChecking=no ec2-user@172.31.17.196 ${dockerRun}"
   }
}
}
